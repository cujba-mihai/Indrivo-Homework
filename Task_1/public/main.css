/*!******************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./node_modules/sass-loader/dist/cjs.js!./styles/index.scss ***!
  \******************************************************************************************************************************************************/
/* http://meyerweb.com/eric/tools/css/reset/ 
   v2.0 | 20110126
   License: none (public domain)
*/
html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

*,
*:after,
*:before {
  box-sizing: border-box;
}

html {
  font-size: 0.5208333333vw;
}

a {
  text-decoration: none;
  outline: none;
  color: inherit;
}

img {
  vertical-align: middle;
}

.app {
  padding: 5.5rem 34.5rem 5rem 28.8rem;
}

.main-container {
  border: 3px solid black;
  margin-top: 4.5rem;
  border-radius: 8px;
  min-height: 62.5rem;
}

.navigation {
  display: flex;
  justify-content: flex-end;
}
.navigation__button-group {
  display: flex;
  flex-direction: row;
  gap: 3rem;
  margin-right: 3rem;
}
.navigation__button {
  font-size: 2.3rem;
  outline: hidden;
  border: none;
  background-color: transparent;
  cursor: pointer;
  text-transform: uppercase;
  font-weight: 700;
}

.radio {
  display: grid;
  grid-template-areas: "merriweather roboto" "merriweather ns";
  grid-template-rows: 50% 50%;
  grid-template-columns: 40% 60%;
  min-height: inherit;
}
.radio__input {
  visibility: hidden;
}
.radio__input:checked, .radio__input:checked + .radio__letter, .radio__input:checked ~ .radio__list {
  opacity: 50%;
}
.radio__label_is--merriweather, .radio__label_is--roboto, .radio__label_is--noto-sans {
  display: flex;
  padding: 5rem;
}
.radio__label_is--merriweather {
  grid-area: merriweather;
  flex-direction: column;
  gap: 3rem;
}
.radio__label_is--roboto {
  grid-area: roboto;
}
.radio__label_is--noto-sans {
  grid-area: ns;
}
.radio__letter {
  width: 17rem;
  height: 16.5rem;
  border-radius: 10%;
  cursor: pointer;
  border: 5px solid white;
  outline: 1px solid black;
  margin-bottom: 20px;
}
.radio__letter_merriweather {
  background-color: #00a650;
  width: 23.5rem;
  height: 23.5rem;
}
.radio__letter_roboto {
  background-color: #ff7fc2;
}
.radio__letter_ns {
  background-color: #006dfe;
}
.radio__letter-abs-wrapper {
  position: relative;
  height: inherit;
}
.radio__letter-abs {
  position: absolute;
  font-size: 8rem;
  font-family: "Montserrat", "sans-serif";
  font-weight: 700;
  color: rgba(255, 255, 255, 0.5);
  top: 50%;
  left: 5%;
}
.radio__letter-abs_is--roboto, .radio__letter-abs_is--noto-sans {
  font-size: 4rem;
}
.radio__list {
  list-style: disc;
}
.radio__list-item {
  font-size: 4rem;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/